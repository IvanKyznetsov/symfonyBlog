# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
            FOS\UserBundle\Model\UserInterface: bcrypt
            Blogger\BlogBundle\Security\User\WebserviceUser: bcrypt

    role_hierarchy:
            ROLE_ADMIN:       ROLE_USER
            ROLE_SUPER_ADMIN: ROLE_ADMIN
            ROLE_ADMINISTAROT: ROLE_ADMINISTAROT
    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory: ~

        fos_userbundle:
                    id: fos_user.user_provider.username
#                    entity:
#                        class: Blogger\BlogBundle\Entity\User
#                        property: apiKey

        api_key_provider:
            id: api_key_provider
#
#        db:
#            id: uecode.api_key.provider.user_provider

#        api_key_user_provider:
#            id: api_key_user_provider

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_keys:
            pattern: ^/api
            provider: api_key_provider
            guard:
                authenticators:
                    - app.token_authenticator
#
#        login:
#            pattern:  ^/api/login
#            provider: fos_userbundle
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                username_parameter:       _username
#                password_parameter:       _password
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#
#        api:
#            pattern:   ^/api
#            stateless: true
#            provider: fos_userbundle
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: ~
            logout: ~
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

#            guard:
#                authenticators:
#                    - app.token_authenticator

#            logout:       true
#            anonymous:    true

#        api_keys:
#            pattern: ^/api
##            simple_preauth:
##                authenticator: api_key
#            provider: api_key_provider
#
#            guard:
#                authenticators:
#                    - app.token_authenticator
#            security: false

#        auth:
#            pattern: ^/api/*
#            api_key: true
#            stateless: true
#            provider: db

#        secured_area:
#            pattern: ^/api
#            stateless: true
#            simple_preauth:
#                authenticator: apikey_authenticator
#            provider: api_key_user_provider

            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~

    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/admin, role: ROLE_ADMIN }
            - { path: ^/comment/, role: IS_AUTHENTICATED_FULLY }
            - { path: ^/comment/delete/, role: ROLE_ADMIN }
            - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
#            - { path: ^/api, roles: ROLE_API }


